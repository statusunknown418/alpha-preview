// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Post {
    id      String @id @default(cuid())
    title   String
    content String
}

model Student {
    id Int @id @default(autoincrement())

    clerkId      String
    email        String   @unique
    firstName    String
    lastName     String
    reviewsGiven Review[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Landlord {
    id Int @id @default(autoincrement())

    clerkId     String
    email       String     @unique
    phoneNumber String
    firstName   String
    lastName    String
    Property    Property[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Property {
    id         Int             @id @default(autoincrement())
    address    String
    city       String
    state      String
    zip        String
    landlordId Int
    landlord   Landlord        @relation(fields: [landlordId], references: [id])
    images     PropertyImage[]
    reviews    Review[]
    documents  Document[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([landlordId])
}

model Document {
    id Int @id @default(autoincrement())

    approved     Boolean @default(false)
    documentName String
    documentURL  String

    Property   Property? @relation(fields: [propertyId], references: [id])
    propertyId Int?

    @@index([propertyId])
}

model PropertyImage {
    id         Int      @id @default(autoincrement())
    imageUrl   String
    propertyId Int
    property   Property @relation(fields: [propertyId], references: [id])

    @@index([propertyId])
}

model Review {
    id         Int      @id @default(autoincrement())
    rating     Int
    comment    String
    propertyId Int
    property   Property @relation(fields: [propertyId], references: [id])
    madeBy     Student? @relation(fields: [madeById], references: [id])
    madeById   Int?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([propertyId])
    @@index([madeById])
}
